#!/bin/bash

# Function: Performs repository deletion.
deleteRepository() {
  # Get GitHub username from user
  read -p "GitHub User Name: " userName

  # Securely get the authorization code from the user (if available)
  read -sp "Authorization or Password: " authKey
  echo

  # Check if the username and auth key are valid by listing repositories
  repoList=$(curl -s -H "Authorization: Bearer $authKey" "https://api.github.com/users/$userName/repos")
  if [ -z "$repoList" ] || [ "$(echo "$repoList" | jq -r 'type')" != "array" ]; then
    echo "Error: Invalid GitHub Username or Authorization Token."
    return
  fi

  # List the user's repositories using the GitHub API and allow selection (using fzf)
  selectedRepo=$(echo "$repoList" | jq -r '.[].full_name' | fzf --prompt="Select Repository: ")
  if [ -z "$selectedRepo" ]; then
    echo "Error: No repository selected or authentication failed."
    return
  fi

  # Ask for user confirmation
  read -p "Are you sure want to delete '$selectedRepo' Repository? (Y/N): " confirmation
  if [ "$confirmation" != "Y" ]; then
    echo "Canceled."
    return
  fi

  # Separate the owner and name of the selected repository
  repoOwner=$(echo "$selectedRepo" | cut -d '/' -f1)
  repoName=$(echo "$selectedRepo" | cut -d '/' -f2)

  # Display the selected operation
  echo "Deleting repository: $selectedRepo"

  # Delete the repository using the GitHub API
  response=$(curl -s -o /dev/null -w "%{http_code}" \
    -X DELETE \
    -H "Accept: application/vnd.github+json" \
    -H "Authorization: Bearer $authKey" \
    -H "X-GitHub-Api-Version: 2022-11-28" \
    "https://api.github.com/repos/$repoOwner/$repoName")

  if [ $response -eq 204 ]; then
    echo "Repository has been successfully deleted."
  elif [ $response -eq 404 ]; then
    echo "Error: Repository not found."
  else
    echo "Error: The process failed. HTTP code: $response"
  fi
}

# Main program
deleteRepository

