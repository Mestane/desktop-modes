#!/bin/bash

# Function: Performs the repository addition process
addRepository() {
  # Get the authorization code from the user securely
  read -sp "Authorization or Password: " authKey
  echo

  # Check if the auth key is valid by listing repositories
  repoList=$(curl -s -H "Authorization: Bearer $authKey" "https://api.github.com/user/repos")
  if [ -z "$repoList" ] || [ "$(echo "$repoList" | jq -r 'type')" != "array" ]; then
    echo "Error: Invalid Authorization Token."
    return
  fi

  # Get the new repository information from the user
  read -p "Repository Name: " newRepoName
  read -p "Repository Description: " description
  read -p "Is Private? (true/false): " isPrivate

  # Create the repository using the GitHub API
  response=$(curl -s -o /dev/null -w "%{http_code}" \
    -X POST \
    -H "Accept: application/vnd.github+json" \
    -H "Authorization: Bearer $authKey" \
    -H "X-GitHub-Api-Version: 2022-11-28" \
    -d "{\"name\":\"$newRepoName\",\"description\":\"$description\",\"homepage\":\"https://github.com\",\"private\":$isPrivate}" \
    "https://api.github.com/user/repos")

  if [ "$response" -eq 201 ]; then
    echo "Repository was successfully created."
    exit 0
  elif [ "$response" -eq 401 ]; then
    echo "Error: Unauthorized. Please check your authorization token or password."
  elif [ "$response" -eq 422 ]; then
    echo "Error: Unprocessable Entity. The repository name may already exist or the input is invalid."
  else
    echo "Error: The process failed. HTTP Code: $response"
  fi
}

# Main program
addRepository

